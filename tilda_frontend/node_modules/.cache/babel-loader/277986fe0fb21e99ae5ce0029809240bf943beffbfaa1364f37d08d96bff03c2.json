{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_project/tilda_frontend/src/components/LogPanel.js\";\nimport React from 'react';\nimport './LogPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogPanel = ({\n  logs\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041B\\u043E\\u0433\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-entries\",\n      children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log-entry\",\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = LogPanel;\nexport default LogPanel;\nvar _c;\n$RefreshReg$(_c, \"LogPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LogPanel","logs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","index","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_project/tilda_frontend/src/components/LogPanel.js"],"sourcesContent":["import React from 'react';\nimport './LogPanel.css';\n\nconst LogPanel = ({ logs }) => {\n  return (\n    <div className=\"log-panel\">\n      <h3>Логи</h3>\n      <div className=\"log-entries\">\n        {logs.map((log, index) => (\n          <div key={index} className=\"log-entry\">\n            {log}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LogPanel;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,oBACEF,OAAA;IAAKG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBJ,OAAA;MAAAI,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbR,OAAA;MAAKG,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBF,IAAI,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBX,OAAA;QAAiBG,SAAS,EAAC,WAAW;QAAAC,QAAA,EACnCM;MAAG,GADIC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAbIX,QAAQ;AAed,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}