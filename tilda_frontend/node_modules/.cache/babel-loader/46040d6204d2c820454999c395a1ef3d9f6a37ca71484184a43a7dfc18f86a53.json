{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_frontend/src/components/PageTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageTable = ({\n  pages\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n  const handleCheckboxChange = pageId => {\n    setSelectedPages(prevSelectedPages => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter(id => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n    setIsDownloading(true);\n    try {\n      for (const pageId of selectedPages) {\n        const page = pages.find(p => p.id === pageId);\n        if (page) {\n          // Выполняем запрос к API для получения данных страницы\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`);\n          const pageData = response.data.result;\n          const zip = new JSZip();\n\n          // Добавляем HTML\n          zip.file(pageData.filename, pageData.html);\n\n          // Добавляем изображения и другие файлы\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              const imageResponse = await axios.get(image.from, {\n                responseType: 'arraybuffer'\n              });\n              zip.file(image.to, imageResponse.data);\n            }\n          }\n\n          // Создаем ZIP и сохраняем его\n          zip.generateAsync({\n            type: 'blob'\n          }).then(content => {\n            saveAs(content, `${pageData.filename}.zip`);\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при загрузке страницы:', error);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download-button\",\n      onClick: handleDownload,\n      disabled: selectedPages.length === 0 || isDownloading,\n      children: isDownloading ? 'Загрузка...' : 'Скачать выбранное'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0422\\u0438\\u043F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedPages.includes(page.id),\n              onChange: () => handleCheckboxChange(page.id),\n              disabled: isDownloading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: page.is_folder ? /*#__PURE__*/_jsxDEV(FolderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(PageIcon, {\n              img: page.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [page.title, page.descr && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-descr\",\n              children: page.descr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: page.date || 'Нет данных'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/${page.alias}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: `/${page.alias}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, page.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), isDownloading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0438\\u0434\\u0435\\u0442, \\u043F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043F\\u043E\\u0434\\u043E\\u0436\\u0434\\u0438\\u0442\\u0435...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(PageTable, \"wM1FkcOKdVPKerTYn2oNn65tMSY=\");\n_c = PageTable;\nexport default PageTable;\nvar _c;\n$RefreshReg$(_c, \"PageTable\");","map":{"version":3,"names":["React","useState","FolderIcon","PageIcon","JSZip","saveAs","axios","jsxDEV","_jsxDEV","PageTable","pages","_s","selectedPages","setSelectedPages","isDownloading","setIsDownloading","publicKey","secretKey","handleCheckboxChange","pageId","prevSelectedPages","includes","filter","id","handleDownload","length","page","find","p","response","get","pageData","data","result","zip","file","filename","html","image","images","from","to","imageResponse","responseType","generateAsync","type","then","content","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","checked","onChange","is_folder","img","title","descr","date","href","alias","target","rel","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_frontend/src/components/PageTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\nconst PageTable = ({ pages }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n\n  const handleCheckboxChange = (pageId) => {\n    setSelectedPages((prevSelectedPages) => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter((id) => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n\n    setIsDownloading(true);\n    try {\n      for (const pageId of selectedPages) {\n        const page = pages.find((p) => p.id === pageId);\n        if (page) {\n          // Выполняем запрос к API для получения данных страницы\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`);\n          const pageData = response.data.result;\n          const zip = new JSZip();\n\n          // Добавляем HTML\n          zip.file(pageData.filename, pageData.html);\n\n          // Добавляем изображения и другие файлы\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              const imageResponse = await axios.get(image.from, { responseType: 'arraybuffer' });\n              zip.file(image.to, imageResponse.data);\n            }\n          }\n\n          // Создаем ZIP и сохраняем его\n          zip.generateAsync({ type: 'blob' }).then((content) => {\n            saveAs(content, `${pageData.filename}.zip`);\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при загрузке страницы:', error);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  return (\n    <div className=\"page-table\">\n      <h2>Страницы проекта</h2>\n      <button\n        className=\"download-button\"\n        onClick={handleDownload}\n        disabled={selectedPages.length === 0 || isDownloading}\n      >\n        {isDownloading ? 'Загрузка...' : 'Скачать выбранное'}\n      </button>\n      <table>\n        <thead>\n          <tr>\n            <th><input type=\"checkbox\" disabled /></th>\n            <th>Тип</th>\n            <th>Заголовок</th>\n            <th>Дата изменений</th>\n            <th>Ссылка</th>\n          </tr>\n        </thead>\n        <tbody>\n          {pages.map(page => (\n            <tr key={page.id}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedPages.includes(page.id)}\n                  onChange={() => handleCheckboxChange(page.id)}\n                  disabled={isDownloading}\n                />\n              </td>\n              <td>{page.is_folder ? <FolderIcon /> : <PageIcon img={page.img} />}</td>\n              <td>\n                {page.title}\n                {page.descr && <div className=\"page-descr\">{page.descr}</div>}\n              </td>\n              <td>{page.date || 'Нет данных'}</td>\n              <td><a href={`/${page.alias}`} target=\"_blank\" rel=\"noopener noreferrer\">{`/${page.alias}`}</a></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {isDownloading && <div className=\"loading-indicator\">Загрузка идет, пожалуйста, подождите...</div>}\n    </div>\n  );\n};\n\nexport default PageTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}