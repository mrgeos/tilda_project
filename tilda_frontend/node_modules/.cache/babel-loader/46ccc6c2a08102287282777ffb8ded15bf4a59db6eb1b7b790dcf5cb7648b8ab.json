{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_frontend/src/components/PageTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport StatusPanel from './StatusPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageTable = ({\n  pages\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(false);\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDownloads(downloads => downloads.map(download => download.progress < 100 ? {\n        ...download,\n        progress: download.progress + 1\n      } : download));\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n  const handleCheckboxChange = pageId => {\n    setSelectedPages(prevSelectedPages => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter(id => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n    const newDownloads = selectedPages.map(pageId => {\n      const page = pages.find(p => p.id === pageId);\n      return {\n        id: pageId,\n        title: page.title,\n        progress: 0,\n        isDownloading: true\n      };\n    });\n    setDownloads([...downloads, ...newDownloads]);\n    setIsPanelVisible(true);\n    for (const pageId of selectedPages) {\n      const page = pages.find(p => p.id === pageId);\n      if (page) {\n        try {\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`);\n          const pageData = response.data.result;\n          const zip = new JSZip();\n          zip.file(pageData.filename, pageData.html);\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              const imageResponse = await axios.get(image.from, {\n                responseType: 'arraybuffer'\n              });\n              zip.file(image.to, imageResponse.data);\n            }\n          }\n          zip.generateAsync({\n            type: 'blob'\n          }).then(content => {\n            saveAs(content, `${pageData.filename}.zip`);\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              progress: 100,\n              isDownloading: false\n            } : download));\n          });\n        } catch (error) {\n          console.error('Ошибка при загрузке страницы:', error);\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            isDownloading: false\n          } : download));\n        }\n      }\n    }\n  };\n  const cancelDownload = pageId => {\n    setDownloads(downloads => downloads.filter(download => download.id !== pageId));\n  };\n  const togglePanel = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download-button\",\n      onClick: handleDownload,\n      disabled: selectedPages.length === 0,\n      children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0422\\u0438\\u043F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedPages.includes(page.id),\n              onChange: () => handleCheckboxChange(page.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: page.is_folder ? /*#__PURE__*/_jsxDEV(FolderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(PageIcon, {\n              img: page.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [page.title, page.descr && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-descr\",\n              children: page.descr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: page.date || 'Нет данных'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/${page.alias}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: `/${page.alias}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, page.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusPanel, {\n      downloads: downloads,\n      cancelDownload: cancelDownload,\n      togglePanel: togglePanel,\n      isPanelVisible: isPanelVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(PageTable, \"lMQTqxo0bi+YWdGVej55F6WiH3w=\");\n_c = PageTable;\nexport default PageTable;\nvar _c;\n$RefreshReg$(_c, \"PageTable\");","map":{"version":3,"names":["React","useState","useEffect","FolderIcon","PageIcon","JSZip","saveAs","axios","StatusPanel","jsxDEV","_jsxDEV","PageTable","pages","_s","selectedPages","setSelectedPages","downloads","setDownloads","isPanelVisible","setIsPanelVisible","publicKey","secretKey","interval","setInterval","map","download","progress","clearInterval","handleCheckboxChange","pageId","prevSelectedPages","includes","filter","id","handleDownload","length","newDownloads","page","find","p","title","isDownloading","response","get","pageData","data","result","zip","file","filename","html","image","images","from","to","imageResponse","responseType","generateAsync","type","then","content","error","console","cancelDownload","togglePanel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","checked","onChange","is_folder","img","descr","date","href","alias","target","rel","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_frontend/src/components/PageTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport StatusPanel from './StatusPanel';\n\nconst PageTable = ({ pages }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(false);\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDownloads((downloads) =>\n        downloads.map((download) =>\n          download.progress < 100 ? { ...download, progress: download.progress + 1 } : download\n        )\n      );\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleCheckboxChange = (pageId) => {\n    setSelectedPages((prevSelectedPages) => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter((id) => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n\n    const newDownloads = selectedPages.map((pageId) => {\n      const page = pages.find((p) => p.id === pageId);\n      return { id: pageId, title: page.title, progress: 0, isDownloading: true };\n    });\n\n    setDownloads([...downloads, ...newDownloads]);\n    setIsPanelVisible(true);\n\n    for (const pageId of selectedPages) {\n      const page = pages.find((p) => p.id === pageId);\n      if (page) {\n        try {\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`);\n          const pageData = response.data.result;\n          const zip = new JSZip();\n\n          zip.file(pageData.filename, pageData.html);\n\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              const imageResponse = await axios.get(image.from, { responseType: 'arraybuffer' });\n              zip.file(image.to, imageResponse.data);\n            }\n          }\n\n          zip.generateAsync({ type: 'blob' }).then((content) => {\n            saveAs(content, `${pageData.filename}.zip`);\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId ? { ...download, progress: 100, isDownloading: false } : download\n              )\n            );\n          });\n        } catch (error) {\n          console.error('Ошибка при загрузке страницы:', error);\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, isDownloading: false } : download\n            )\n          );\n        }\n      }\n    }\n  };\n\n  const cancelDownload = (pageId) => {\n    setDownloads((downloads) => downloads.filter((download) => download.id !== pageId));\n  };\n\n  const togglePanel = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n\n  return (\n    <div className=\"page-table\">\n      <h2>Страницы проекта</h2>\n      <button\n        className=\"download-button\"\n        onClick={handleDownload}\n        disabled={selectedPages.length === 0}\n      >\n        Скачать выбранное\n      </button>\n      <table>\n        <thead>\n          <tr>\n            <th><input type=\"checkbox\" disabled /></th>\n            <th>Тип</th>\n            <th>Заголовок</th>\n            <th>Дата изменений</th>\n            <th>Ссылка</th>\n          </tr>\n        </thead>\n        <tbody>\n          {pages.map(page => (\n            <tr key={page.id}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedPages.includes(page.id)}\n                  onChange={() => handleCheckboxChange(page.id)}\n                />\n              </td>\n              <td>{page.is_folder ? <FolderIcon /> : <PageIcon img={page.img} />}</td>\n              <td>\n                {page.title}\n                {page.descr && <div className=\"page-descr\">{page.descr}</div>}\n              </td>\n              <td>{page.date || 'Нет данных'}</td>\n              <td><a href={`/${page.alias}`} target=\"_blank\" rel=\"noopener noreferrer\">{`/${page.alias}`}</a></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <StatusPanel\n        downloads={downloads}\n        cancelDownload={cancelDownload}\n        togglePanel={togglePanel}\n        isPanelVisible={isPanelVisible}\n      />\n    </div>\n  );\n};\n\nexport default PageTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}