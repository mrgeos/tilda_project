{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_project/tilda_frontend/src/components/LogPanel.js\";\nimport React from 'react';\nimport './LogPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogPanel = ({\n  logMessages\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041B\\u043E\\u0433\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-content\",\n      children: logMessages && logMessages.length > 0 ? logMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u043E\\u043A\\u0430 \\u0447\\u0442\\u043E \\u043D\\u0435\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = LogPanel;\nexport default LogPanel;\nvar _c;\n$RefreshReg$(_c, \"LogPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LogPanel","logMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","message","index","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_project/tilda_frontend/src/components/LogPanel.js"],"sourcesContent":["import React from 'react';\nimport './LogPanel.css';\n\nconst LogPanel = ({ logMessages }) => {\n  return (\n    <div className=\"log-panel\">\n      <h3>Логи загрузки</h3>\n      <div className=\"log-content\">\n        {(logMessages && logMessages.length > 0) ? (\n          logMessages.map((message, index) => (\n            <p key={index}>{message}</p>\n          ))\n        ) : (\n          <p>Пока что нет сообщений.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LogPanel;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACpC,oBACEF,OAAA;IAAKG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBJ,OAAA;MAAAI,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBR,OAAA;MAAKG,SAAS,EAAC,aAAa;MAAAC,QAAA,EACxBF,WAAW,IAAIA,WAAW,CAACO,MAAM,GAAG,CAAC,GACrCP,WAAW,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7BZ,OAAA;QAAAI,QAAA,EAAgBO;MAAO,GAAfC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC5B,CAAC,gBAEFR,OAAA;QAAAI,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC9B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAfIZ,QAAQ;AAiBd,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}