{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_project/tilda_frontend/src/components/PageTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport StatusPanel from './StatusPanel';\nimport { FaSortDown, FaTimes } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pastelColors = ['#DEFDE0', '#DEF3FD', '#FCF7DE', '#F0DEFD', '#FDDFDF'];\nconst sortOptions = {\n  default: 'По умолчанию',\n  asc: 'Сначала старые',\n  desc: 'Сначала новые',\n  grouped: 'По группам'\n};\nconst PageTable = ({\n  pages\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(false);\n  const [sortedPages, setSortedPages] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isConfirmationVisible, setIsConfirmationVisible] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [groupColors, setGroupColors] = useState({});\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n  const abortControllers = new Map();\n  const groupAndSortPagesByDescr = pages => {\n    const groupedPages = pages.reduce((acc, page) => {\n      const groupKey = page.descr || '';\n      if (!acc[groupKey]) {\n        acc[groupKey] = [];\n      }\n      acc[groupKey].push(page);\n      return acc;\n    }, {});\n    const sortedGroups = Object.values(groupedPages).sort((groupA, groupB) => {\n      const dateA = new Date(groupA[0].date);\n      const dateB = new Date(groupB[0].date);\n      return dateB - dateA;\n    });\n    const filteredGroups = sortedGroups.filter(group => group.length > 1 && group[0].descr !== '');\n    const ungroupedPages = sortedGroups.filter(group => group.length <= 1 || group[0].descr === '').flat().sort((a, b) => new Date(b.date) - new Date(a.date));\n    const finalPages = [...filteredGroups.flat(), ...ungroupedPages];\n    const newGroupColors = {};\n    filteredGroups.forEach((group, index) => {\n      const groupKey = group[0].descr;\n      newGroupColors[groupKey] = pastelColors[index % pastelColors.length];\n    });\n    setGroupColors(newGroupColors);\n    return finalPages;\n  };\n  const sortPagesByDate = order => {\n    let sorted;\n    if (order === 'default') {\n      sorted = pages;\n    } else {\n      sorted = [...pages].sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return order === 'asc' ? dateA - dateB : dateB - dateA;\n      });\n    }\n    return sorted;\n  };\n  useEffect(() => {\n    let sorted;\n    if (sortOrder === 'grouped') {\n      sorted = groupAndSortPagesByDescr(pages);\n    } else {\n      sorted = sortPagesByDate(sortOrder);\n    }\n    setSortedPages(sorted);\n  }, [pages, sortOrder]);\n  const handleCheckboxChange = pageId => {\n    setSelectedPages(prevSelectedPages => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter(id => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n    if (selectedPages.length > 10) {\n      setIsConfirmationVisible(true);\n      return;\n    }\n    performDownload();\n  };\n  const performDownload = async () => {\n    setIsDownloading(true);\n    const newDownloads = selectedPages.map(pageId => {\n      const page = pages.find(p => p.id === pageId);\n      const abortController = new AbortController();\n      abortControllers.set(pageId, abortController);\n      return {\n        id: pageId,\n        title: page.title,\n        progress: 0,\n        status: 'archiving',\n        size: null,\n        abortController\n      };\n    });\n    setDownloads([...downloads, ...newDownloads]);\n    setIsPanelVisible(true);\n    for (const download of newDownloads) {\n      const {\n        id: pageId,\n        abortController\n      } = download;\n      const page = pages.find(p => p.id === pageId);\n      if (page) {\n        try {\n          if (abortController.signal.aborted) {\n            console.log(`Запрос отменен перед началом для страницы ${pageId}`);\n            continue;\n          }\n          console.log(`Начинаем загрузку страницы ${pageId}.`);\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`, {\n            signal: abortController.signal\n          });\n          const pageData = response.data.result;\n          const zip = new JSZip();\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'archiving'\n          } : download));\n\n          // Структурируем файлы\n          zip.folder('css');\n          zip.folder('js');\n          zip.folder('images');\n          zip.folder('files');\n\n          // Обновляем HTML ссылки и добавляем CSS и JS файлы в архив\n          const updateHtmlLinks = (html, cssFiles, jsFiles) => {\n            cssFiles.forEach(file => {\n              zip.file(`css/${file.name}`, file.content);\n              const regex = new RegExp(`href=\".*${file.name}\"`, 'g');\n              html = html.replace(regex, `href=\"css/${file.name}\"`);\n            });\n            jsFiles.forEach(file => {\n              zip.file(`js/${file.name}`, file.content);\n              const regex = new RegExp(`src=\".*${file.name}\"`, 'g');\n              html = html.replace(regex, `src=\"js/${file.name}\"`);\n            });\n            return html;\n          };\n          let updatedHtml = pageData.html;\n          updatedHtml = updateHtmlLinks(updatedHtml, pageData.css, pageData.js);\n\n          // Добавляем обновленный HTML файл в архив\n          zip.file(`${pageData.filename}.html`, updatedHtml);\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              if (abortController.signal.aborted) {\n                console.log(`Запрос отменен во время загрузки изображения для страницы ${pageId}`);\n                continue;\n              }\n              const imageResponse = await axios.get(image.from, {\n                responseType: 'arraybuffer',\n                signal: abortController.signal\n              });\n              zip.file(`images/${image.to}`, imageResponse.data);\n            }\n          }\n          if (abortController.signal.aborted) {\n            console.log(`Запрос отменен во время архивации для страницы ${pageId}`);\n            continue;\n          }\n          const zipBlob = await zip.generateAsync({\n            type: 'blob'\n          }, metadata => {\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              progress: metadata.percent.toFixed(2),\n              size: (metadata.total / (1024 * 1024)).toFixed(2)\n            } : download));\n          });\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'downloading',\n            progress: 100\n          } : download));\n          saveAs(zipBlob, `${page.title}.zip`);\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'completed'\n          } : download));\n          console.log(`Загрузка страницы ${pageId} завершена.`);\n        } catch (error) {\n          if (axios.isCancel(error)) {\n            console.log(`Загрузка страницы ${pageId} отменена.`);\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              status: 'cancelled'\n            } : download));\n          } else {\n            console.error('Ошибка при загрузке страницы:', error);\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              status: 'error'\n            } : download));\n          }\n        }\n      }\n    }\n    setSelectedPages([]);\n    setIsConfirmationVisible(false);\n    setIsDownloading(false);\n  };\n  const cancelDownload = pageId => {\n    const abortController = abortControllers.get(pageId);\n    if (abortController) {\n      abortController.abort();\n      abortControllers.delete(pageId);\n      console.log(`Скачивание страницы ${pageId} отменено.`);\n    }\n    setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n      ...download,\n      status: 'cancelled'\n    } : download));\n  };\n  const hideCompleted = () => {\n    setDownloads(downloads => downloads.filter(download => download.status !== 'completed' && download.status !== 'cancelled'));\n  };\n  const togglePanel = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n  };\n  const clearSearch = () => {\n    setSearchText(\"\");\n  };\n  const getHighlightedText = (text, highlight) => {\n    if (!highlight.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${highlight})`, 'gi');\n    const parts = text.split(regex);\n    return parts.map((part, index) => part.toLowerCase() === highlight.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"highlight\",\n      children: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 56\n    }, this) : part);\n  };\n  const filteredPages = sortedPages.filter(page => page.title.toLowerCase().includes(searchText.toLowerCase()) || page.descr.toLowerCase().includes(searchText.toLowerCase()));\n  const getRowClass = (page, index) => {\n    if (sortOrder === 'grouped' && index > 0) {\n      const prevPage = filteredPages[index - 1];\n      if (page.descr === prevPage.descr && page.descr !== '' && filteredPages.filter(p => p.descr === page.descr).length > 1) {\n        return 'grouped';\n      }\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `download-button ${isDownloading ? 'loading' : ''}`,\n        onClick: handleDownload,\n        disabled: isDownloading || selectedPages.length === 0,\n        children: isDownloading ? `Идет скачивание (${selectedPages.length})` : `Скачать выбранное${selectedPages.length > 0 ? ` (${selectedPages.length})` : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), selectedPages.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clear-selection\",\n        onClick: () => setSelectedPages([]),\n        children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u0432\\u0441\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\\u043C...\",\n          value: searchText,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), searchText && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-search\",\n          onClick: clearSearch,\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sort-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sort-button\",\n          onClick: () => setIsDropdownOpen(!isDropdownOpen),\n          children: [sortOptions[sortOrder], \" \", /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"dropdown-menu\",\n          children: Object.keys(sortOptions).map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: sortOrder === option ? 'selected' : '',\n            onClick: () => {\n              setSortOrder(option);\n              setIsDropdownOpen(false); // Закрываем список после выбора\n            },\n            children: sortOptions[option]\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0422\\u0438\\u043F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredPages.map((page, index) => {\n          const rowColor = sortOrder === 'grouped' && page.descr && filteredPages.filter(p => p.descr === page.descr).length > 1 ? groupColors[page.descr] : 'inherit';\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: getRowClass(page, index),\n            style: {\n              backgroundColor: rowColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedPages.includes(page.id),\n                onChange: () => handleCheckboxChange(page.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: page.is_folder ? /*#__PURE__*/_jsxDEV(FolderIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 39\n              }, this) : /*#__PURE__*/_jsxDEV(PageIcon, {\n                img: page.img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [getHighlightedText(page.title, searchText), page.descr && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-descr\",\n                children: getHighlightedText(page.descr, searchText)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: page.date || 'Нет данных'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/${page.alias}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: `/${page.alias}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, page.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), isConfirmationVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-dialog\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0412\\u044B \\u0441\\u043E\\u0431\\u0438\\u0440\\u0430\\u0435\\u0442\\u0435\\u0441\\u044C \\u0441\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \", selectedPages.length, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446. \\u042D\\u0442\\u043E \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0437\\u0430\\u043D\\u044F\\u0442\\u044C \\u043C\\u043D\\u043E\\u0433\\u043E \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438, \\u043C\\u0435\\u0441\\u0442\\u0430 \\u043D\\u0430 \\u043B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u043E\\u043C \\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440\\u0435 \\u0438\\u043B\\u0438 \\u0438\\u043D\\u0442\\u0435\\u0440\\u043D\\u0435\\u0442-\\u0442\\u0440\\u0430\\u0444\\u0438\\u043A\\u0430. \\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setIsConfirmationVisible(false);\n            performDownload();\n          },\n          children: [\"\\u0414\\u0430, \\u044F \\u0445\\u043E\\u0447\\u0443 \\u0441\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \", selectedPages.length, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsConfirmationVisible(false),\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatusPanel, {\n      downloads: downloads,\n      cancelDownload: cancelDownload,\n      togglePanel: togglePanel,\n      isPanelVisible: isPanelVisible,\n      hideCompleted: hideCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(PageTable, \"Q3fpPFyzHkIlj3QzbspHfs53R34=\");\n_c = PageTable;\nexport default PageTable;\nvar _c;\n$RefreshReg$(_c, \"PageTable\");","map":{"version":3,"names":["React","useState","useEffect","FolderIcon","PageIcon","JSZip","saveAs","axios","StatusPanel","FaSortDown","FaTimes","jsxDEV","_jsxDEV","pastelColors","sortOptions","default","asc","desc","grouped","PageTable","pages","_s","selectedPages","setSelectedPages","downloads","setDownloads","isPanelVisible","setIsPanelVisible","sortedPages","setSortedPages","searchText","setSearchText","sortOrder","setSortOrder","isDropdownOpen","setIsDropdownOpen","isConfirmationVisible","setIsConfirmationVisible","isDownloading","setIsDownloading","groupColors","setGroupColors","publicKey","secretKey","abortControllers","Map","groupAndSortPagesByDescr","groupedPages","reduce","acc","page","groupKey","descr","push","sortedGroups","Object","values","sort","groupA","groupB","dateA","Date","date","dateB","filteredGroups","filter","group","length","ungroupedPages","flat","a","b","finalPages","newGroupColors","forEach","index","sortPagesByDate","order","sorted","handleCheckboxChange","pageId","prevSelectedPages","includes","id","handleDownload","performDownload","newDownloads","map","find","p","abortController","AbortController","set","title","progress","status","size","download","signal","aborted","console","log","response","get","pageData","data","result","zip","folder","updateHtmlLinks","html","cssFiles","jsFiles","file","name","content","regex","RegExp","replace","updatedHtml","css","js","filename","image","images","from","to","imageResponse","responseType","zipBlob","generateAsync","type","metadata","percent","toFixed","total","error","isCancel","cancelDownload","abort","delete","hideCompleted","togglePanel","handleSearchChange","event","target","value","clearSearch","getHighlightedText","text","highlight","trim","parts","split","part","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredPages","getRowClass","prevPage","onClick","disabled","placeholder","onChange","keys","option","rowColor","style","backgroundColor","checked","is_folder","img","href","alias","rel","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_project/tilda_frontend/src/components/PageTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport StatusPanel from './StatusPanel';\nimport { FaSortDown, FaTimes } from 'react-icons/fa';\n\nconst pastelColors = ['#DEFDE0', '#DEF3FD', '#FCF7DE', '#F0DEFD', '#FDDFDF'];\n\nconst sortOptions = {\n  default: 'По умолчанию',\n  asc: 'Сначала старые',\n  desc: 'Сначала новые',\n  grouped: 'По группам'\n};\n\nconst PageTable = ({ pages }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(false);\n  const [sortedPages, setSortedPages] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isConfirmationVisible, setIsConfirmationVisible] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [groupColors, setGroupColors] = useState({});\n\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n\n  const abortControllers = new Map();\n\n  const groupAndSortPagesByDescr = (pages) => {\n    const groupedPages = pages.reduce((acc, page) => {\n      const groupKey = page.descr || '';\n      if (!acc[groupKey]) {\n        acc[groupKey] = [];\n      }\n      acc[groupKey].push(page);\n      return acc;\n    }, {});\n\n    const sortedGroups = Object.values(groupedPages).sort((groupA, groupB) => {\n      const dateA = new Date(groupA[0].date);\n      const dateB = new Date(groupB[0].date);\n      return dateB - dateA;\n    });\n\n    const filteredGroups = sortedGroups.filter(group => group.length > 1 && group[0].descr !== '');\n\n    const ungroupedPages = sortedGroups\n      .filter(group => group.length <= 1 || group[0].descr === '')\n      .flat()\n      .sort((a, b) => new Date(b.date) - new Date(a.date));\n\n    const finalPages = [...filteredGroups.flat(), ...ungroupedPages];\n\n    const newGroupColors = {};\n    filteredGroups.forEach((group, index) => {\n      const groupKey = group[0].descr;\n      newGroupColors[groupKey] = pastelColors[index % pastelColors.length];\n    });\n\n    setGroupColors(newGroupColors);\n    return finalPages;\n  };\n\n  const sortPagesByDate = (order) => {\n    let sorted;\n    if (order === 'default') {\n      sorted = pages;\n    } else {\n      sorted = [...pages].sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return order === 'asc' ? dateA - dateB : dateB - dateA;\n      });\n    }\n    return sorted;\n  };\n\n  useEffect(() => {\n    let sorted;\n    if (sortOrder === 'grouped') {\n      sorted = groupAndSortPagesByDescr(pages);\n    } else {\n      sorted = sortPagesByDate(sortOrder);\n    }\n    setSortedPages(sorted);\n  }, [pages, sortOrder]);\n\n  const handleCheckboxChange = (pageId) => {\n    setSelectedPages((prevSelectedPages) => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter((id) => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n\n    if (selectedPages.length > 10) {\n      setIsConfirmationVisible(true);\n      return;\n    }\n\n    performDownload();\n  };\n\n  const performDownload = async () => {\n    setIsDownloading(true);\n\n    const newDownloads = selectedPages.map((pageId) => {\n      const page = pages.find((p) => p.id === pageId);\n      const abortController = new AbortController();\n      abortControllers.set(pageId, abortController);\n\n      return { id: pageId, title: page.title, progress: 0, status: 'archiving', size: null, abortController };\n    });\n\n    setDownloads([...downloads, ...newDownloads]);\n    setIsPanelVisible(true);\n\n    for (const download of newDownloads) {\n      const { id: pageId, abortController } = download;\n      const page = pages.find((p) => p.id === pageId);\n      if (page) {\n        try {\n          if (abortController.signal.aborted) {\n            console.log(`Запрос отменен перед началом для страницы ${pageId}`);\n            continue;\n          }\n\n          console.log(`Начинаем загрузку страницы ${pageId}.`);\n\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`, {\n            signal: abortController.signal\n          });\n\n          const pageData = response.data.result;\n          const zip = new JSZip();\n\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'archiving' } : download\n            )\n          );\n\n          // Структурируем файлы\n          zip.folder('css');\n          zip.folder('js');\n          zip.folder('images');\n          zip.folder('files');\n\n          // Обновляем HTML ссылки и добавляем CSS и JS файлы в архив\n          const updateHtmlLinks = (html, cssFiles, jsFiles) => {\n            cssFiles.forEach(file => {\n              zip.file(`css/${file.name}`, file.content);\n              const regex = new RegExp(`href=\".*${file.name}\"`, 'g');\n              html = html.replace(regex, `href=\"css/${file.name}\"`);\n            });\n\n            jsFiles.forEach(file => {\n              zip.file(`js/${file.name}`, file.content);\n              const regex = new RegExp(`src=\".*${file.name}\"`, 'g');\n              html = html.replace(regex, `src=\"js/${file.name}\"`);\n            });\n\n            return html;\n          };\n\n          let updatedHtml = pageData.html;\n          updatedHtml = updateHtmlLinks(updatedHtml, pageData.css, pageData.js);\n\n          // Добавляем обновленный HTML файл в архив\n          zip.file(`${pageData.filename}.html`, updatedHtml);\n\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              if (abortController.signal.aborted) {\n                console.log(`Запрос отменен во время загрузки изображения для страницы ${pageId}`);\n                continue;\n              }\n              const imageResponse = await axios.get(image.from, {\n                responseType: 'arraybuffer',\n                signal: abortController.signal\n              });\n              zip.file(`images/${image.to}`, imageResponse.data);\n            }\n          }\n\n          if (abortController.signal.aborted) {\n            console.log(`Запрос отменен во время архивации для страницы ${pageId}`);\n            continue;\n          }\n\n          const zipBlob = await zip.generateAsync({ type: 'blob' }, (metadata) => {\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId\n                  ? { ...download, progress: metadata.percent.toFixed(2), size: (metadata.total / (1024 * 1024)).toFixed(2) }\n                  : download\n              )\n            );\n          });\n\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'downloading', progress: 100 } : download\n            )\n          );\n\n          saveAs(zipBlob, `${page.title}.zip`);\n\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'completed' } : download\n            )\n          );\n\n          console.log(`Загрузка страницы ${pageId} завершена.`);\n\n        } catch (error) {\n          if (axios.isCancel(error)) {\n            console.log(`Загрузка страницы ${pageId} отменена.`);\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId ? { ...download, status: 'cancelled' } : download\n              )\n            );\n          } else {\n            console.error('Ошибка при загрузке страницы:', error);\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId ? { ...download, status: 'error' } : download\n              )\n            );\n          }\n        }\n      }\n    }\n\n    setSelectedPages([]);\n    setIsConfirmationVisible(false);\n    setIsDownloading(false);\n  };\n\n  const cancelDownload = (pageId) => {\n    const abortController = abortControllers.get(pageId);\n    if (abortController) {\n      abortController.abort();\n      abortControllers.delete(pageId);\n      console.log(`Скачивание страницы ${pageId} отменено.`);\n    }\n    setDownloads((downloads) =>\n      downloads.map((download) =>\n        download.id === pageId ? { ...download, status: 'cancelled' } : download\n      )\n    );\n  };\n\n  const hideCompleted = () => {\n    setDownloads((downloads) => downloads.filter((download) => download.status !== 'completed' && download.status !== 'cancelled'));\n  };\n\n  const togglePanel = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearchText(\"\");\n  };\n\n  const getHighlightedText = (text, highlight) => {\n    if (!highlight.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${highlight})`, 'gi');\n    const parts = text.split(regex);\n    return parts.map((part, index) =>\n      part.toLowerCase() === highlight.toLowerCase() ? <span key={index} className=\"highlight\">{part}</span> : part\n    );\n  };\n\n  const filteredPages = sortedPages.filter(page =>\n    page.title.toLowerCase().includes(searchText.toLowerCase()) ||\n    page.descr.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  const getRowClass = (page, index) => {\n    if (sortOrder === 'grouped' && index > 0) {\n      const prevPage = filteredPages[index - 1];\n      if (page.descr === prevPage.descr && page.descr !== '' && filteredPages.filter(p => p.descr === page.descr).length > 1) {\n        return 'grouped';\n      }\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"page-table\">\n      <h2>Страницы проекта</h2>\n      <div className=\"action-buttons\">\n        <button\n          className={`download-button ${isDownloading ? 'loading' : ''}`}\n          onClick={handleDownload}\n          disabled={isDownloading || selectedPages.length === 0}\n        >\n          {isDownloading ? `Идет скачивание (${selectedPages.length})` : `Скачать выбранное${selectedPages.length > 0 ? ` (${selectedPages.length})` : ''}`}\n        </button>\n        {selectedPages.length > 0 && (\n          <span className=\"clear-selection\" onClick={() => setSelectedPages([])}>\n            Снять все\n          </span>\n        )}\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Поиск по страницам...\"\n            value={searchText}\n            onChange={handleSearchChange}\n          />\n          {searchText && (\n            <button className=\"clear-search\" onClick={clearSearch}>\n              <FaTimes />\n            </button>\n          )}\n        </div>\n        <div className=\"sort-dropdown\">\n          <button className=\"sort-button\" onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n            {sortOptions[sortOrder]} <FaSortDown />\n          </button>\n          {isDropdownOpen && (\n            <ul className=\"dropdown-menu\">\n              {Object.keys(sortOptions).map(option => (\n                <li\n                  key={option}\n                  className={sortOrder === option ? 'selected' : ''}\n                  onClick={() => {\n                    setSortOrder(option);\n                    setIsDropdownOpen(false); // Закрываем список после выбора\n                  }}\n                >\n                  {sortOptions[option]}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n\n      <table>\n        <thead>\n          <tr>\n            <th><input type=\"checkbox\" disabled /></th>\n            <th>Тип</th>\n            <th>Заголовок</th>\n            <th>Дата изменений</th>\n            <th>Ссылка</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredPages.map((page, index) => {\n            const rowColor = sortOrder === 'grouped' && page.descr && filteredPages.filter(p => p.descr === page.descr).length > 1\n              ? groupColors[page.descr]\n              : 'inherit';\n            return (\n              <tr\n                key={page.id}\n                className={getRowClass(page, index)}\n                style={{ backgroundColor: rowColor }}\n              >\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedPages.includes(page.id)}\n                    onChange={() => handleCheckboxChange(page.id)}\n                  />\n                </td>\n                <td>{page.is_folder ? <FolderIcon /> : <PageIcon img={page.img} />}</td>\n                <td>\n                  {getHighlightedText(page.title, searchText)}\n                  {page.descr && <div className=\"page-descr\">{getHighlightedText(page.descr, searchText)}</div>}\n                </td>\n                <td>{page.date || 'Нет данных'}</td>\n                <td><a href={`/${page.alias}`} target=\"_blank\" rel=\"noopener noreferrer\">{`/${page.alias}`}</a></td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {isConfirmationVisible && (\n        <div className=\"overlay\">\n          <div className=\"confirmation-dialog\">\n            <p>\n              Вы собираетесь скачать {selectedPages.length} страниц. Это может занять много времени,\n              места на локальном компьютере или интернет-трафика. Вы уверены?\n            </p>\n            <button onClick={() => {\n              setIsConfirmationVisible(false);\n              performDownload();\n            }}>\n              Да, я хочу скачать {selectedPages.length} страниц\n            </button>\n            <button onClick={() => setIsConfirmationVisible(false)}>Отмена</button>\n          </div>\n        </div>\n      )}\n\n      <StatusPanel\n        downloads={downloads}\n        cancelDownload={cancelDownload}\n        togglePanel={togglePanel}\n        isPanelVisible={isPanelVisible}\n        hideCompleted={hideCompleted}\n      />\n    </div>\n  );\n};\n\nexport default PageTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}