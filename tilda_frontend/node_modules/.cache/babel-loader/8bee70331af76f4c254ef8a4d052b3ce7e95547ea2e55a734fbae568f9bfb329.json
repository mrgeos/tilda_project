{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_frontend/src/components/PageTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageTable = ({\n  pages\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const handleCheckboxChange = pageId => {\n    setSelectedPages(prevSelectedPages => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter(id => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n  const handleDownload = () => {\n    if (selectedPages.length === 0) return;\n    selectedPages.forEach(pageId => {\n      const page = pages.find(p => p.id === pageId);\n      if (page && page.url) {\n        // Попробуем открыть ссылку в новой вкладке\n        const link = document.createElement('a');\n        link.href = page.url;\n        link.target = '_blank';\n        link.rel = 'noopener noreferrer';\n        link.click();\n      } else {\n        console.error('URL not found for page:', pageId);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download-button\",\n      onClick: handleDownload,\n      disabled: selectedPages.length === 0,\n      children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0422\\u0438\\u043F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedPages.includes(page.id),\n              onChange: () => handleCheckboxChange(page.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: page.is_folder ? /*#__PURE__*/_jsxDEV(FolderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(PageIcon, {\n              img: page.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [page.title, page.descr && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-descr\",\n              children: page.descr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: page.date || 'Нет данных'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/${page.alias}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: `/${page.alias}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, page.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PageTable, \"OVrwngAKdE15+Z+E8v/1N8VDIk4=\");\n_c = PageTable;\nexport default PageTable;\nvar _c;\n$RefreshReg$(_c, \"PageTable\");","map":{"version":3,"names":["React","useState","FolderIcon","PageIcon","jsxDEV","_jsxDEV","PageTable","pages","_s","selectedPages","setSelectedPages","handleCheckboxChange","pageId","prevSelectedPages","includes","filter","id","handleDownload","length","forEach","page","find","p","url","link","document","createElement","href","target","rel","click","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","map","checked","onChange","is_folder","img","title","descr","date","alias","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_frontend/src/components/PageTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\n\nconst PageTable = ({ pages }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n\n  const handleCheckboxChange = (pageId) => {\n    setSelectedPages((prevSelectedPages) => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter((id) => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n\n  const handleDownload = () => {\n    if (selectedPages.length === 0) return;\n\n    selectedPages.forEach((pageId) => {\n      const page = pages.find((p) => p.id === pageId);\n      if (page && page.url) {\n        // Попробуем открыть ссылку в новой вкладке\n        const link = document.createElement('a');\n        link.href = page.url;\n        link.target = '_blank';\n        link.rel = 'noopener noreferrer';\n        link.click();\n      } else {\n        console.error('URL not found for page:', pageId);\n      }\n    });\n  };\n\n  return (\n    <div className=\"page-table\">\n      <h2>Страницы проекта</h2>\n      <button\n        className=\"download-button\"\n        onClick={handleDownload}\n        disabled={selectedPages.length === 0}\n      >\n        Скачать выбранное\n      </button>\n      <table>\n        <thead>\n          <tr>\n            <th><input type=\"checkbox\" disabled /></th>\n            <th>Тип</th>\n            <th>Заголовок</th>\n            <th>Дата изменений</th>\n            <th>Ссылка</th>\n          </tr>\n        </thead>\n        <tbody>\n          {pages.map(page => (\n            <tr key={page.id}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedPages.includes(page.id)}\n                  onChange={() => handleCheckboxChange(page.id)}\n                />\n              </td>\n              <td>{page.is_folder ? <FolderIcon /> : <PageIcon img={page.img} />}</td>\n              <td>\n                {page.title}\n                {page.descr && <div className=\"page-descr\">{page.descr}</div>}\n              </td>\n              <td>{page.date || 'Нет данных'}</td>\n              <td><a href={`/${page.alias}`} target=\"_blank\" rel=\"noopener noreferrer\">{`/${page.alias}`}</a></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PageTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,oBAAoB,GAAIC,MAAM,IAAK;IACvCF,gBAAgB,CAAEG,iBAAiB,IAAK;MACtC,IAAIA,iBAAiB,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;QACtC,OAAOC,iBAAiB,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKJ,MAAM,CAAC;MACxD,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,iBAAiB,EAAED,MAAM,CAAC;MACvC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIR,aAAa,CAACS,MAAM,KAAK,CAAC,EAAE;IAEhCT,aAAa,CAACU,OAAO,CAAEP,MAAM,IAAK;MAChC,MAAMQ,IAAI,GAAGb,KAAK,CAACc,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACN,EAAE,KAAKJ,MAAM,CAAC;MAC/C,IAAIQ,IAAI,IAAIA,IAAI,CAACG,GAAG,EAAE;QACpB;QACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGP,IAAI,CAACG,GAAG;QACpBC,IAAI,CAACI,MAAM,GAAG,QAAQ;QACtBJ,IAAI,CAACK,GAAG,GAAG,qBAAqB;QAChCL,IAAI,CAACM,KAAK,CAAC,CAAC;MACd,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEpB,MAAM,CAAC;MAClD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEP,OAAA;IAAK4B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB7B,OAAA;MAAA6B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjC,OAAA;MACE4B,SAAS,EAAC,iBAAiB;MAC3BM,OAAO,EAAEtB,cAAe;MACxBuB,QAAQ,EAAE/B,aAAa,CAACS,MAAM,KAAK,CAAE;MAAAgB,QAAA,EACtC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjC,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,eACE7B,OAAA;UAAA6B,QAAA,gBACE7B,OAAA;YAAA6B,QAAA,eAAI7B,OAAA;cAAOoC,IAAI,EAAC,UAAU;cAACD,QAAQ;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3CjC,OAAA;YAAA6B,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZjC,OAAA;YAAA6B,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBjC,OAAA;YAAA6B,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBjC,OAAA;YAAA6B,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRjC,OAAA;QAAA6B,QAAA,EACG3B,KAAK,CAACmC,GAAG,CAACtB,IAAI,iBACbf,OAAA;UAAA6B,QAAA,gBACE7B,OAAA;YAAA6B,QAAA,eACE7B,OAAA;cACEoC,IAAI,EAAC,UAAU;cACfE,OAAO,EAAElC,aAAa,CAACK,QAAQ,CAACM,IAAI,CAACJ,EAAE,CAAE;cACzC4B,QAAQ,EAAEA,CAAA,KAAMjC,oBAAoB,CAACS,IAAI,CAACJ,EAAE;YAAE;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLjC,OAAA;YAAA6B,QAAA,EAAKd,IAAI,CAACyB,SAAS,gBAAGxC,OAAA,CAACH,UAAU;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGjC,OAAA,CAACF,QAAQ;cAAC2C,GAAG,EAAE1B,IAAI,CAAC0B;YAAI;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxEjC,OAAA;YAAA6B,QAAA,GACGd,IAAI,CAAC2B,KAAK,EACV3B,IAAI,CAAC4B,KAAK,iBAAI3C,OAAA;cAAK4B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEd,IAAI,CAAC4B;YAAK;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC,eACLjC,OAAA;YAAA6B,QAAA,EAAKd,IAAI,CAAC6B,IAAI,IAAI;UAAY;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpCjC,OAAA;YAAA6B,QAAA,eAAI7B,OAAA;cAAGsB,IAAI,EAAE,IAAIP,IAAI,CAAC8B,KAAK,EAAG;cAACtB,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,qBAAqB;cAAAK,QAAA,EAAE,IAAId,IAAI,CAAC8B,KAAK;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAd7FlB,IAAI,CAACJ,EAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA1EIF,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AA4Ef,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}