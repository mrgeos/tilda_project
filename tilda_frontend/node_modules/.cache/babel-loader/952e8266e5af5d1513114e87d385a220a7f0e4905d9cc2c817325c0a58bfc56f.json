{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_project/tilda_frontend/src/components/PageTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport StatusPanel from './StatusPanel';\nimport { FaSortDown, FaTimes } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageTable = ({\n  pages\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(false);\n  const [sortedPages, setSortedPages] = useState(pages);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isConfirmationVisible, setIsConfirmationVisible] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n  const abortControllers = new Map();\n  useEffect(() => {\n    setSortedPages(pages);\n  }, [pages]);\n  const handleCheckboxChange = pageId => {\n    setSelectedPages(prevSelectedPages => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter(id => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n    if (selectedPages.length > 10) {\n      setIsConfirmationVisible(true);\n      return;\n    }\n    performDownload();\n  };\n  const performDownload = async () => {\n    setIsDownloading(true);\n    const newDownloads = selectedPages.map(pageId => {\n      const page = pages.find(p => p.id === pageId);\n      const abortController = new AbortController();\n      abortControllers.set(pageId, abortController);\n      return {\n        id: pageId,\n        title: page.title,\n        progress: 0,\n        status: 'archiving',\n        size: null,\n        abortController\n      };\n    });\n    setDownloads([...downloads, ...newDownloads]);\n    setIsPanelVisible(true);\n    for (const download of newDownloads) {\n      const {\n        id: pageId,\n        abortController\n      } = download;\n      const page = pages.find(p => p.id === pageId);\n      if (page) {\n        try {\n          // Проверяем, был ли запрос отменен до его начала\n          if (abortController.signal.aborted) {\n            console.log(`Запрос для страницы ${pageId} был отменен до начала загрузки.`);\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              status: 'cancelled'\n            } : download));\n            continue;\n          }\n          console.log(`Начинаем загрузку страницы ${pageId}.`);\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`, {\n            signal: abortController.signal\n          });\n          console.log(`Загрузка страницы ${pageId} начата.`);\n          const pageData = response.data.result;\n          const zip = new JSZip();\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'archiving'\n          } : download));\n          zip.file(pageData.filename, pageData.html);\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              // Проверяем, был ли запрос отменен перед загрузкой каждого изображения\n              if (abortController.signal.aborted) {\n                console.log(`Запрос для изображения на странице ${pageId} был отменен.`);\n                setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n                  ...download,\n                  status: 'cancelled'\n                } : download));\n                throw axios.Cancel(`Загрузка изображений для страницы ${pageId} отменена.`);\n              }\n              const imageResponse = await axios.get(image.from, {\n                responseType: 'arraybuffer',\n                signal: abortController.signal\n              });\n              zip.file(image.to, imageResponse.data);\n            }\n          }\n          const zipBlob = await zip.generateAsync({\n            type: 'blob'\n          }, metadata => {\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              progress: metadata.percent.toFixed(2),\n              size: (metadata.total / (1024 * 1024)).toFixed(2)\n            } : download));\n          });\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'downloading',\n            progress: 100\n          } : download));\n          saveAs(zipBlob, `${pageData.filename}.zip`);\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'completed'\n          } : download));\n          console.log(`Загрузка страницы ${pageId} завершена.`);\n        } catch (error) {\n          if (axios.isCancel(error)) {\n            console.log(`Загрузка страницы ${pageId} отменена:`, error.message);\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              status: 'cancelled'\n            } : download));\n          } else {\n            console.error('Ошибка при загрузке страницы:', error);\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              status: 'error'\n            } : download));\n          }\n        }\n      }\n    }\n    setSelectedPages([]);\n    setIsConfirmationVisible(false);\n    setIsDownloading(false);\n  };\n  const cancelDownload = pageId => {\n    const abortController = abortControllers.get(pageId);\n    if (abortController) {\n      abortController.abort();\n      abortControllers.delete(pageId);\n      console.log(`Скачивание страницы ${pageId} отменено.`);\n    }\n    setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n      ...download,\n      status: 'cancelled'\n    } : download));\n  };\n  const hideCompleted = () => {\n    setDownloads(downloads => downloads.filter(download => download.status !== 'completed' && download.status !== 'cancelled'));\n  };\n  const togglePanel = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n  const sortPagesByDate = order => {\n    let sorted;\n    if (order === 'default') {\n      sorted = pages;\n    } else {\n      sorted = [...pages].sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return order === 'asc' ? dateA - dateB : dateB - dateA;\n      });\n    }\n    setSortedPages(sorted);\n    setSortOrder(order);\n    setIsDropdownOpen(false);\n  };\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n  };\n  const clearSearch = () => {\n    setSearchText(\"\");\n  };\n  const getHighlightedText = (text, highlight) => {\n    if (!highlight.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${highlight})`, 'gi');\n    const parts = text.split(regex);\n    return parts.map((part, index) => part.toLowerCase() === highlight.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"highlight\",\n      children: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 56\n    }, this) : part);\n  };\n  const filteredPages = sortedPages.filter(page => page.title.toLowerCase().includes(searchText.toLowerCase()) || page.descr.toLowerCase().includes(searchText.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `download-button ${isDownloading ? 'loading' : ''}`,\n        onClick: handleDownload,\n        disabled: isDownloading || selectedPages.length === 0,\n        children: isDownloading ? `Идет скачивание (${selectedPages.length})` : `Скачать выбранное${selectedPages.length > 0 ? ` (${selectedPages.length})` : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), selectedPages.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-button\",\n        onClick: () => setSelectedPages([]),\n        children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\\u043C...\",\n        value: searchText,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), searchText && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-search-button\",\n        onClick: clearSearch,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorting-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsDropdownOpen(!isDropdownOpen),\n        children: [\"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E \\u0434\\u0430\\u0442\\u0435 \", /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorting-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortPagesByDate('default'),\n          children: \"\\u041F\\u043E \\u0443\\u043C\\u043E\\u043B\\u0447\\u0430\\u043D\\u0438\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortPagesByDate('asc'),\n          children: \"\\u041F\\u043E \\u0432\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u0430\\u043D\\u0438\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortPagesByDate('desc'),\n          children: \"\\u041F\\u043E \\u0443\\u0431\\u044B\\u0432\\u0430\\u043D\\u0438\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-list\",\n      children: filteredPages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `checkbox-${page.id}`,\n            checked: selectedPages.includes(page.id),\n            onChange: () => handleCheckboxChange(page.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `checkbox-${page.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-info\",\n            children: [page.isFolder ? /*#__PURE__*/_jsxDEV(FolderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 34\n            }, this) : /*#__PURE__*/_jsxDEV(PageIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: getHighlightedText(page.title, searchText)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: getHighlightedText(page.descr, searchText)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: new Date(page.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, page.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusPanel, {\n      downloads: downloads,\n      cancelDownload: cancelDownload,\n      hideCompleted: hideCompleted,\n      isPanelVisible: isPanelVisible,\n      togglePanel: togglePanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(PageTable, \"XtZ1+KBW45CEnOghxaiFKwjRLlo=\");\n_c = PageTable;\nexport default PageTable;\nvar _c;\n$RefreshReg$(_c, \"PageTable\");","map":{"version":3,"names":["React","useState","useEffect","FolderIcon","PageIcon","JSZip","saveAs","axios","StatusPanel","FaSortDown","FaTimes","jsxDEV","_jsxDEV","PageTable","pages","_s","selectedPages","setSelectedPages","downloads","setDownloads","isPanelVisible","setIsPanelVisible","sortedPages","setSortedPages","searchText","setSearchText","sortOrder","setSortOrder","isDropdownOpen","setIsDropdownOpen","isConfirmationVisible","setIsConfirmationVisible","isDownloading","setIsDownloading","publicKey","secretKey","abortControllers","Map","handleCheckboxChange","pageId","prevSelectedPages","includes","filter","id","handleDownload","length","performDownload","newDownloads","map","page","find","p","abortController","AbortController","set","title","progress","status","size","download","signal","aborted","console","log","response","get","pageData","data","result","zip","file","filename","html","image","images","from","to","Cancel","imageResponse","responseType","zipBlob","generateAsync","type","metadata","percent","toFixed","total","error","isCancel","message","cancelDownload","abort","delete","hideCompleted","togglePanel","sortPagesByDate","order","sorted","sort","a","b","dateA","Date","date","dateB","handleSearchChange","event","target","value","clearSearch","getHighlightedText","text","highlight","trim","regex","RegExp","parts","split","part","index","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredPages","descr","onClick","disabled","placeholder","onChange","checked","htmlFor","isFolder","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_project/tilda_frontend/src/components/PageTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport StatusPanel from './StatusPanel';\nimport { FaSortDown, FaTimes } from 'react-icons/fa';\n\nconst PageTable = ({ pages }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(false);\n  const [sortedPages, setSortedPages] = useState(pages);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isConfirmationVisible, setIsConfirmationVisible] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n\n  const abortControllers = new Map();\n\n  useEffect(() => {\n    setSortedPages(pages);\n  }, [pages]);\n\n  const handleCheckboxChange = (pageId) => {\n    setSelectedPages((prevSelectedPages) => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter((id) => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n\n    if (selectedPages.length > 10) {\n      setIsConfirmationVisible(true);\n      return;\n    }\n\n    performDownload();\n  };\n\n  const performDownload = async () => {\n    setIsDownloading(true);\n\n    const newDownloads = selectedPages.map((pageId) => {\n      const page = pages.find((p) => p.id === pageId);\n      const abortController = new AbortController();\n      abortControllers.set(pageId, abortController);\n\n      return { id: pageId, title: page.title, progress: 0, status: 'archiving', size: null, abortController };\n    });\n\n    setDownloads([...downloads, ...newDownloads]);\n    setIsPanelVisible(true);\n\n    for (const download of newDownloads) {\n      const { id: pageId, abortController } = download;\n      const page = pages.find((p) => p.id === pageId);\n      if (page) {\n        try {\n          // Проверяем, был ли запрос отменен до его начала\n          if (abortController.signal.aborted) {\n            console.log(`Запрос для страницы ${pageId} был отменен до начала загрузки.`);\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId ? { ...download, status: 'cancelled' } : download\n              )\n            );\n            continue;\n          }\n\n          console.log(`Начинаем загрузку страницы ${pageId}.`);\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`, {\n            signal: abortController.signal\n          });\n          console.log(`Загрузка страницы ${pageId} начата.`);\n\n          const pageData = response.data.result;\n          const zip = new JSZip();\n\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'archiving' } : download\n            )\n          );\n\n          zip.file(pageData.filename, pageData.html);\n\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              // Проверяем, был ли запрос отменен перед загрузкой каждого изображения\n              if (abortController.signal.aborted) {\n                console.log(`Запрос для изображения на странице ${pageId} был отменен.`);\n                setDownloads((downloads) =>\n                  downloads.map((download) =>\n                    download.id === pageId ? { ...download, status: 'cancelled' } : download\n                  )\n                );\n                throw axios.Cancel(`Загрузка изображений для страницы ${pageId} отменена.`);\n              }\n              const imageResponse = await axios.get(image.from, {\n                responseType: 'arraybuffer',\n                signal: abortController.signal\n              });\n              zip.file(image.to, imageResponse.data);\n            }\n          }\n\n          const zipBlob = await zip.generateAsync({ type: 'blob' }, (metadata) => {\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId\n                  ? { ...download, progress: metadata.percent.toFixed(2), size: (metadata.total / (1024 * 1024)).toFixed(2) }\n                  : download\n              )\n            );\n          });\n\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'downloading', progress: 100 } : download\n            )\n          );\n\n          saveAs(zipBlob, `${pageData.filename}.zip`);\n\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'completed' } : download\n            )\n          );\n\n          console.log(`Загрузка страницы ${pageId} завершена.`);\n\n        } catch (error) {\n          if (axios.isCancel(error)) {\n            console.log(`Загрузка страницы ${pageId} отменена:`, error.message);\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId ? { ...download, status: 'cancelled' } : download\n              )\n            );\n          } else {\n            console.error('Ошибка при загрузке страницы:', error);\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId ? { ...download, status: 'error' } : download\n              )\n            );\n          }\n        }\n      }\n    }\n\n    setSelectedPages([]);\n    setIsConfirmationVisible(false);\n    setIsDownloading(false);\n  };\n\n  const cancelDownload = (pageId) => {\n    const abortController = abortControllers.get(pageId);\n    if (abortController) {\n      abortController.abort();\n      abortControllers.delete(pageId);\n      console.log(`Скачивание страницы ${pageId} отменено.`);\n    }\n    setDownloads((downloads) =>\n      downloads.map((download) =>\n        download.id === pageId ? { ...download, status: 'cancelled' } : download\n      )\n    );\n  };\n\n  const hideCompleted = () => {\n    setDownloads((downloads) => downloads.filter((download) => download.status !== 'completed' && download.status !== 'cancelled'));\n  };\n\n  const togglePanel = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n\n  const sortPagesByDate = (order) => {\n    let sorted;\n    if (order === 'default') {\n      sorted = pages;\n    } else {\n      sorted = [...pages].sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return order === 'asc' ? dateA - dateB : dateB - dateA;\n      });\n    }\n    setSortedPages(sorted);\n    setSortOrder(order);\n    setIsDropdownOpen(false);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearchText(\"\");\n  };\n\n  const getHighlightedText = (text, highlight) => {\n    if (!highlight.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${highlight})`, 'gi');\n    const parts = text.split(regex);\n    return parts.map((part, index) =>\n      part.toLowerCase() === highlight.toLowerCase() ? <span key={index} className=\"highlight\">{part}</span> : part\n    );\n  };\n\n  const filteredPages = sortedPages.filter(page =>\n    page.title.toLowerCase().includes(searchText.toLowerCase()) ||\n    page.descr.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <div className=\"page-table\">\n      <h2>Страницы проекта</h2>\n      <div className=\"action-buttons\">\n        <button\n          className={`download-button ${isDownloading ? 'loading' : ''}`}\n          onClick={handleDownload}\n          disabled={isDownloading || selectedPages.length === 0}\n        >\n          {isDownloading ? `Идет скачивание (${selectedPages.length})` : `Скачать выбранное${selectedPages.length > 0 ? ` (${selectedPages.length})` : ''}`}\n        </button>\n        {selectedPages.length > 0 && (\n          <button className=\"clear-button\" onClick={() => setSelectedPages([])}>Очистить выбор</button>\n        )}\n      </div>\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Поиск по страницам...\"\n          value={searchText}\n          onChange={handleSearchChange}\n        />\n        {searchText && <button className=\"clear-search-button\" onClick={clearSearch}>×</button>}\n      </div>\n      <div className=\"sorting-bar\">\n        <button onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n          Сортировать по дате <FaSortDown />\n        </button>\n        {isDropdownOpen && (\n          <div className=\"sorting-options\">\n            <button onClick={() => sortPagesByDate('default')}>По умолчанию</button>\n            <button onClick={() => sortPagesByDate('asc')}>По возрастанию</button>\n            <button onClick={() => sortPagesByDate('desc')}>По убыванию</button>\n          </div>\n        )}\n      </div>\n      <div className=\"page-list\">\n        {filteredPages.map((page) => (\n          <div key={page.id} className=\"page-item\">\n            <div className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                id={`checkbox-${page.id}`}\n                checked={selectedPages.includes(page.id)}\n                onChange={() => handleCheckboxChange(page.id)}\n              />\n            </div>\n            <label htmlFor={`checkbox-${page.id}`}>\n              <div className=\"page-info\">\n                {page.isFolder ? <FolderIcon /> : <PageIcon />}\n                <div className=\"page-details\">\n                  <h3>{getHighlightedText(page.title, searchText)}</h3>\n                  <p>{getHighlightedText(page.descr, searchText)}</p>\n                  <span>{new Date(page.date).toLocaleDateString()}</span>\n                </div>\n              </div>\n            </label>\n          </div>\n        ))}\n      </div>\n      <StatusPanel\n        downloads={downloads}\n        cancelDownload={cancelDownload}\n        hideCompleted={hideCompleted}\n        isPanelVisible={isPanelVisible}\n        togglePanel={togglePanel}\n      />\n    </div>\n  );\n};\n\nexport default PageTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}