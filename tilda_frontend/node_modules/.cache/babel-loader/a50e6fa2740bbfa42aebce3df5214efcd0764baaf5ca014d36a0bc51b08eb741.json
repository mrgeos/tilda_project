{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sites, setSites] = useState([]);\n  const [pages, setPages] = useState([]);\n  const [selectedSite, setSelectedSite] = useState(null);\n  useEffect(() => {\n    // Получаем список сайтов при загрузке компонента\n    axios.get('http://localhost:5000/api/sites').then(response => {\n      setSites(response.data.result);\n    }).catch(error => {\n      console.error('Ошибка при загрузке сайтов:', error);\n    });\n  }, []);\n  const fetchPages = projectId => {\n    // Получаем список страниц для выбранного сайта\n    axios.get(`http://localhost:5000/api/sites/${projectId}/pages`).then(response => {\n      setPages(response.data.result);\n      setSelectedSite(projectId);\n    }).catch(error => {\n      console.error('Ошибка при загрузке страниц:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u0430\\u0439\\u0442\\u044B Tilda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"site-list\",\n      children: sites.map(site => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"site-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: site.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchPages(site.id),\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, site.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), selectedSite && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u0441\\u0430\\u0439\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"page-list\",\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: page.title\n        }, page.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XgC2m038n6LDc58IzQSrvO9iQec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","sites","setSites","pages","setPages","selectedSite","setSelectedSite","get","then","response","data","result","catch","error","console","fetchPages","projectId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","site","title","onClick","id","page","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [sites, setSites] = useState([]);\n  const [pages, setPages] = useState([]);\n  const [selectedSite, setSelectedSite] = useState(null);\n\n  useEffect(() => {\n    // Получаем список сайтов при загрузке компонента\n    axios.get('http://localhost:5000/api/sites')\n      .then(response => {\n        setSites(response.data.result);\n      })\n      .catch(error => {\n        console.error('Ошибка при загрузке сайтов:', error);\n      });\n  }, []);\n\n  const fetchPages = (projectId) => {\n    // Получаем список страниц для выбранного сайта\n    axios.get(`http://localhost:5000/api/sites/${projectId}/pages`)\n      .then(response => {\n        setPages(response.data.result);\n        setSelectedSite(projectId);\n      })\n      .catch(error => {\n        console.error('Ошибка при загрузке страниц:', error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Сайты Tilda</h1>\n      <ul className=\"site-list\">\n        {sites.map(site => (\n          <li key={site.id} className=\"site-item\">\n            <span>{site.title}</span>\n            <button onClick={() => fetchPages(site.id)}>Показать страницы</button>\n          </li>\n        ))}\n      </ul>\n      \n      {selectedSite && (\n        <div className=\"pages-section\">\n          <h2>Страницы сайта</h2>\n          <ul className=\"page-list\">\n            {pages.map(page => (\n              <li key={page.id} className=\"page-item\">\n                {page.title}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}