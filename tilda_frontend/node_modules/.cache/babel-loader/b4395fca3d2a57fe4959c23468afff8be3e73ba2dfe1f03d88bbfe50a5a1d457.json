{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_frontend/src/components/PageTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport StatusPanel from './StatusPanel';\nimport { FaSortDown, FaTimes } from 'react-icons/fa'; // Импорт иконок\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageTable = ({\n  pages\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(false);\n  const [sortedPages, setSortedPages] = useState(pages);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n\n  // Обновляем sortedPages при изменении pages\n  React.useEffect(() => {\n    setSortedPages(pages);\n  }, [pages]);\n  const handleCheckboxChange = pageId => {\n    setSelectedPages(prevSelectedPages => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter(id => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n    const newDownloads = selectedPages.map(pageId => {\n      const page = pages.find(p => p.id === pageId);\n      return {\n        id: pageId,\n        title: page.title,\n        progress: 0,\n        status: 'archiving',\n        size: null\n      };\n    });\n    setDownloads([...downloads, ...newDownloads]);\n    setIsPanelVisible(true);\n    for (const pageId of selectedPages) {\n      const page = pages.find(p => p.id === pageId);\n      if (page) {\n        try {\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`);\n          const pageData = response.data.result;\n          const zip = new JSZip();\n\n          // Обновляем статус на \"архивируется\"\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'archiving'\n          } : download));\n          zip.file(pageData.filename, pageData.html);\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              const imageResponse = await axios.get(image.from, {\n                responseType: 'arraybuffer'\n              });\n              zip.file(image.to, imageResponse.data);\n            }\n          }\n\n          // Генерация архива\n          const zipBlob = await zip.generateAsync({\n            type: 'blob'\n          }, metadata => {\n            setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n              ...download,\n              progress: metadata.percent.toFixed(2),\n              size: (metadata.total / (1024 * 1024)).toFixed(2)\n            } : download));\n          });\n\n          // Обновляем статус на \"скачивание\"\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'downloading',\n            progress: 100\n          } : download));\n\n          // Сохранение архива\n          saveAs(zipBlob, `${pageData.filename}.zip`);\n\n          // Обновляем статус на \"завершено\"\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'completed'\n          } : download));\n        } catch (error) {\n          console.error('Ошибка при загрузке страницы:', error);\n          setDownloads(downloads => downloads.map(download => download.id === pageId ? {\n            ...download,\n            status: 'error'\n          } : download));\n        }\n      }\n    }\n\n    // Сброс выбранных страниц после завершения скачивания\n    setSelectedPages([]);\n  };\n  const cancelDownload = pageId => {\n    setDownloads(downloads => downloads.filter(download => download.id !== pageId));\n  };\n  const hideCompleted = () => {\n    setDownloads(downloads => downloads.filter(download => download.status !== 'completed'));\n  };\n  const togglePanel = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n  const sortPagesByDate = order => {\n    let sorted;\n    if (order === 'default') {\n      sorted = pages; // Возвращаемся к изначальному порядку\n    } else {\n      sorted = [...pages].sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return order === 'asc' ? dateA - dateB : dateB - dateA;\n      });\n    }\n    setSortedPages(sorted);\n    setSortOrder(order); // Устанавливаем выбранный порядок сортировки\n    setIsDropdownOpen(false); // Закрываем выпадающий список\n  };\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n  };\n  const clearSearch = () => {\n    setSearchText(\"\");\n  };\n  const getHighlightedText = (text, highlight) => {\n    if (!highlight.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${highlight})`, 'gi');\n    const parts = text.split(regex);\n    return parts.map((part, index) => part.toLowerCase() === highlight.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"highlight\",\n      children: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 56\n    }, this) : part);\n  };\n  const filteredPages = sortedPages.filter(page => page.title.toLowerCase().includes(searchText.toLowerCase()) || page.descr.toLowerCase().includes(searchText.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button\",\n        onClick: handleDownload,\n        disabled: selectedPages.length === 0,\n        children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\\u043C...\",\n          value: searchText,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), searchText && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-search\",\n          onClick: clearSearch,\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sort-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sort-button\",\n          onClick: () => setIsDropdownOpen(!isDropdownOpen),\n          children: [\"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: sortOrder === 'default' ? 'selected' : '',\n            onClick: () => sortPagesByDate('default'),\n            children: \"\\u041F\\u043E \\u0443\\u043C\\u043E\\u043B\\u0447\\u0430\\u043D\\u0438\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: sortOrder === 'asc' ? 'selected' : '',\n            onClick: () => sortPagesByDate('asc'),\n            children: \"\\u0421\\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0441\\u0442\\u0430\\u0440\\u044B\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: sortOrder === 'desc' ? 'selected' : '',\n            onClick: () => sortPagesByDate('desc'),\n            children: \"\\u0421\\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043D\\u043E\\u0432\\u044B\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0422\\u0438\\u043F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredPages.map(page => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedPages.includes(page.id),\n              onChange: () => handleCheckboxChange(page.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: page.is_folder ? /*#__PURE__*/_jsxDEV(FolderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(PageIcon, {\n              img: page.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [getHighlightedText(page.title, searchText), page.descr && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-descr\",\n              children: getHighlightedText(page.descr, searchText)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: page.date || 'Нет данных'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/${page.alias}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: `/${page.alias}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, page.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusPanel, {\n      downloads: downloads,\n      cancelDownload: cancelDownload,\n      togglePanel: togglePanel,\n      isPanelVisible: isPanelVisible,\n      hideCompleted: hideCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(PageTable, \"axNEFNy/IQqLAYewyyfz3ebuxyY=\");\n_c = PageTable;\nexport default PageTable;\nvar _c;\n$RefreshReg$(_c, \"PageTable\");","map":{"version":3,"names":["React","useState","FolderIcon","PageIcon","JSZip","saveAs","axios","StatusPanel","FaSortDown","FaTimes","jsxDEV","_jsxDEV","PageTable","pages","_s","selectedPages","setSelectedPages","downloads","setDownloads","isPanelVisible","setIsPanelVisible","sortedPages","setSortedPages","searchText","setSearchText","sortOrder","setSortOrder","isDropdownOpen","setIsDropdownOpen","publicKey","secretKey","useEffect","handleCheckboxChange","pageId","prevSelectedPages","includes","filter","id","handleDownload","length","newDownloads","map","page","find","p","title","progress","status","size","response","get","pageData","data","result","zip","download","file","filename","html","image","images","from","to","imageResponse","responseType","zipBlob","generateAsync","type","metadata","percent","toFixed","total","error","console","cancelDownload","hideCompleted","togglePanel","sortPagesByDate","order","sorted","sort","a","b","dateA","Date","date","dateB","handleSearchChange","event","target","value","clearSearch","getHighlightedText","text","highlight","trim","regex","RegExp","parts","split","part","index","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredPages","descr","onClick","disabled","placeholder","onChange","checked","is_folder","img","href","alias","rel","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_frontend/src/components/PageTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PageTable.css';\nimport FolderIcon from './FolderIcon';\nimport PageIcon from './PageIcon';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport StatusPanel from './StatusPanel';\nimport { FaSortDown, FaTimes } from 'react-icons/fa'; // Импорт иконок\n\nconst PageTable = ({ pages }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(false);\n  const [sortedPages, setSortedPages] = useState(pages);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"default\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const publicKey = 'wxtiwdek2iftl7r54gu6';\n  const secretKey = 'kqxlrzh8swhoub7qpmbr';\n\n  // Обновляем sortedPages при изменении pages\n  React.useEffect(() => {\n    setSortedPages(pages);\n  }, [pages]);\n\n  const handleCheckboxChange = (pageId) => {\n    setSelectedPages((prevSelectedPages) => {\n      if (prevSelectedPages.includes(pageId)) {\n        return prevSelectedPages.filter((id) => id !== pageId);\n      } else {\n        return [...prevSelectedPages, pageId];\n      }\n    });\n  };\n\n  const handleDownload = async () => {\n    if (selectedPages.length === 0) return;\n\n    const newDownloads = selectedPages.map((pageId) => {\n      const page = pages.find((p) => p.id === pageId);\n      return { id: pageId, title: page.title, progress: 0, status: 'archiving', size: null };\n    });\n\n    setDownloads([...downloads, ...newDownloads]);\n    setIsPanelVisible(true);\n\n    for (const pageId of selectedPages) {\n      const page = pages.find((p) => p.id === pageId);\n      if (page) {\n        try {\n          const response = await axios.get(`https://api.tildacdn.info/v1/getpagefullexport/?publickey=${publicKey}&secretkey=${secretKey}&pageid=${pageId}`);\n          const pageData = response.data.result;\n          const zip = new JSZip();\n\n          // Обновляем статус на \"архивируется\"\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'archiving' } : download\n            )\n          );\n\n          zip.file(pageData.filename, pageData.html);\n\n          for (const image of pageData.images) {\n            if (image.from && image.to) {\n              const imageResponse = await axios.get(image.from, { responseType: 'arraybuffer' });\n              zip.file(image.to, imageResponse.data);\n            }\n          }\n\n          // Генерация архива\n          const zipBlob = await zip.generateAsync({ type: 'blob' }, (metadata) => {\n            setDownloads((downloads) =>\n              downloads.map((download) =>\n                download.id === pageId\n                  ? { ...download, progress: metadata.percent.toFixed(2), size: (metadata.total / (1024 * 1024)).toFixed(2) }\n                  : download\n              )\n            );\n          });\n\n          // Обновляем статус на \"скачивание\"\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'downloading', progress: 100 } : download\n            )\n          );\n\n          // Сохранение архива\n          saveAs(zipBlob, `${pageData.filename}.zip`);\n\n          // Обновляем статус на \"завершено\"\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'completed' } : download\n            )\n          );\n\n        } catch (error) {\n          console.error('Ошибка при загрузке страницы:', error);\n          setDownloads((downloads) =>\n            downloads.map((download) =>\n              download.id === pageId ? { ...download, status: 'error' } : download\n            )\n          );\n        }\n      }\n    }\n\n    // Сброс выбранных страниц после завершения скачивания\n    setSelectedPages([]);\n  };\n\n  const cancelDownload = (pageId) => {\n    setDownloads((downloads) => downloads.filter((download) => download.id !== pageId));\n  };\n\n  const hideCompleted = () => {\n    setDownloads((downloads) => downloads.filter((download) => download.status !== 'completed'));\n  };\n\n  const togglePanel = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n\n  const sortPagesByDate = (order) => {\n    let sorted;\n    if (order === 'default') {\n      sorted = pages; // Возвращаемся к изначальному порядку\n    } else {\n      sorted = [...pages].sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return order === 'asc' ? dateA - dateB : dateB - dateA;\n      });\n    }\n    setSortedPages(sorted);\n    setSortOrder(order); // Устанавливаем выбранный порядок сортировки\n    setIsDropdownOpen(false); // Закрываем выпадающий список\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearchText(\"\");\n  };\n\n  const getHighlightedText = (text, highlight) => {\n    if (!highlight.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${highlight})`, 'gi');\n    const parts = text.split(regex);\n    return parts.map((part, index) =>\n      part.toLowerCase() === highlight.toLowerCase() ? <span key={index} className=\"highlight\">{part}</span> : part\n    );\n  };\n\n  const filteredPages = sortedPages.filter(page =>\n    page.title.toLowerCase().includes(searchText.toLowerCase()) ||\n    page.descr.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <div className=\"page-table\">\n      <h2>Страницы проекта</h2>\n      <div className=\"action-buttons\">\n        <button\n          className=\"download-button\"\n          onClick={handleDownload}\n          disabled={selectedPages.length === 0}\n        >\n          Скачать выбранное\n        </button>\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Поиск по страницам...\"\n            value={searchText}\n            onChange={handleSearchChange}\n          />\n          {searchText && (\n            <button className=\"clear-search\" onClick={clearSearch}>\n              <FaTimes />\n            </button>\n          )}\n        </div>\n        <div className=\"sort-dropdown\">\n          <button className=\"sort-button\" onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n            Сортировать <FaSortDown />\n          </button>\n          {isDropdownOpen && (\n            <ul className=\"dropdown-menu\">\n              <li className={sortOrder === 'default' ? 'selected' : ''} onClick={() => sortPagesByDate('default')}>По умолчанию</li>\n              <li className={sortOrder === 'asc' ? 'selected' : ''} onClick={() => sortPagesByDate('asc')}>Сначала старые</li>\n              <li className={sortOrder === 'desc' ? 'selected' : ''} onClick={() => sortPagesByDate('desc')}>Сначала новые</li>\n            </ul>\n          )}\n        </div>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th><input type=\"checkbox\" disabled /></th>\n            <th>Тип</th>\n            <th>Заголовок</th>\n            <th>Дата изменений</th>\n            <th>Ссылка</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredPages.map(page => (\n            <tr key={page.id}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedPages.includes(page.id)}\n                  onChange={() => handleCheckboxChange(page.id)}\n                />\n              </td>\n              <td>{page.is_folder ? <FolderIcon /> : <PageIcon img={page.img} />}</td>\n              <td>\n                {getHighlightedText(page.title, searchText)}\n                {page.descr && <div className=\"page-descr\">{getHighlightedText(page.descr, searchText)}</div>}\n              </td>\n              <td>{page.date || 'Нет данных'}</td>\n              <td><a href={`/${page.alias}`} target=\"_blank\" rel=\"noopener noreferrer\">{`/${page.alias}`}</a></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <StatusPanel\n        downloads={downloads}\n        cancelDownload={cancelDownload}\n        togglePanel={togglePanel}\n        isPanelVisible={isPanelVisible}\n        hideCompleted={hideCompleted}\n      />\n    </div>\n  );\n};\n\nexport default PageTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,YAAY;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,UAAU,EAAEC,OAAO,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAACY,KAAK,CAAC;EACrD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM4B,SAAS,GAAG,sBAAsB;EACxC,MAAMC,SAAS,GAAG,sBAAsB;;EAExC;EACA9B,KAAK,CAAC+B,SAAS,CAAC,MAAM;IACpBT,cAAc,CAACT,KAAK,CAAC;EACvB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMmB,oBAAoB,GAAIC,MAAM,IAAK;IACvCjB,gBAAgB,CAAEkB,iBAAiB,IAAK;MACtC,IAAIA,iBAAiB,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;QACtC,OAAOC,iBAAiB,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKJ,MAAM,CAAC;MACxD,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,iBAAiB,EAAED,MAAM,CAAC;MACvC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIvB,aAAa,CAACwB,MAAM,KAAK,CAAC,EAAE;IAEhC,MAAMC,YAAY,GAAGzB,aAAa,CAAC0B,GAAG,CAAER,MAAM,IAAK;MACjD,MAAMS,IAAI,GAAG7B,KAAK,CAAC8B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKJ,MAAM,CAAC;MAC/C,OAAO;QAAEI,EAAE,EAAEJ,MAAM;QAAEY,KAAK,EAAEH,IAAI,CAACG,KAAK;QAAEC,QAAQ,EAAE,CAAC;QAAEC,MAAM,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAK,CAAC;IACxF,CAAC,CAAC;IAEF9B,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE,GAAGuB,YAAY,CAAC,CAAC;IAC7CpB,iBAAiB,CAAC,IAAI,CAAC;IAEvB,KAAK,MAAMa,MAAM,IAAIlB,aAAa,EAAE;MAClC,MAAM2B,IAAI,GAAG7B,KAAK,CAAC8B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKJ,MAAM,CAAC;MAC/C,IAAIS,IAAI,EAAE;QACR,IAAI;UACF,MAAMO,QAAQ,GAAG,MAAM3C,KAAK,CAAC4C,GAAG,CAAC,6DAA6DrB,SAAS,cAAcC,SAAS,WAAWG,MAAM,EAAE,CAAC;UAClJ,MAAMkB,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM;UACrC,MAAMC,GAAG,GAAG,IAAIlD,KAAK,CAAC,CAAC;;UAEvB;UACAc,YAAY,CAAED,SAAS,IACrBA,SAAS,CAACwB,GAAG,CAAEc,QAAQ,IACrBA,QAAQ,CAAClB,EAAE,KAAKJ,MAAM,GAAG;YAAE,GAAGsB,QAAQ;YAAER,MAAM,EAAE;UAAY,CAAC,GAAGQ,QAClE,CACF,CAAC;UAEDD,GAAG,CAACE,IAAI,CAACL,QAAQ,CAACM,QAAQ,EAAEN,QAAQ,CAACO,IAAI,CAAC;UAE1C,KAAK,MAAMC,KAAK,IAAIR,QAAQ,CAACS,MAAM,EAAE;YACnC,IAAID,KAAK,CAACE,IAAI,IAAIF,KAAK,CAACG,EAAE,EAAE;cAC1B,MAAMC,aAAa,GAAG,MAAMzD,KAAK,CAAC4C,GAAG,CAACS,KAAK,CAACE,IAAI,EAAE;gBAAEG,YAAY,EAAE;cAAc,CAAC,CAAC;cAClFV,GAAG,CAACE,IAAI,CAACG,KAAK,CAACG,EAAE,EAAEC,aAAa,CAACX,IAAI,CAAC;YACxC;UACF;;UAEA;UACA,MAAMa,OAAO,GAAG,MAAMX,GAAG,CAACY,aAAa,CAAC;YAAEC,IAAI,EAAE;UAAO,CAAC,EAAGC,QAAQ,IAAK;YACtElD,YAAY,CAAED,SAAS,IACrBA,SAAS,CAACwB,GAAG,CAAEc,QAAQ,IACrBA,QAAQ,CAAClB,EAAE,KAAKJ,MAAM,GAClB;cAAE,GAAGsB,QAAQ;cAAET,QAAQ,EAAEsB,QAAQ,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;cAAEtB,IAAI,EAAE,CAACoB,QAAQ,CAACG,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,EAAED,OAAO,CAAC,CAAC;YAAE,CAAC,GACzGf,QACN,CACF,CAAC;UACH,CAAC,CAAC;;UAEF;UACArC,YAAY,CAAED,SAAS,IACrBA,SAAS,CAACwB,GAAG,CAAEc,QAAQ,IACrBA,QAAQ,CAAClB,EAAE,KAAKJ,MAAM,GAAG;YAAE,GAAGsB,QAAQ;YAAER,MAAM,EAAE,aAAa;YAAED,QAAQ,EAAE;UAAI,CAAC,GAAGS,QACnF,CACF,CAAC;;UAED;UACAlD,MAAM,CAAC4D,OAAO,EAAE,GAAGd,QAAQ,CAACM,QAAQ,MAAM,CAAC;;UAE3C;UACAvC,YAAY,CAAED,SAAS,IACrBA,SAAS,CAACwB,GAAG,CAAEc,QAAQ,IACrBA,QAAQ,CAAClB,EAAE,KAAKJ,MAAM,GAAG;YAAE,GAAGsB,QAAQ;YAAER,MAAM,EAAE;UAAY,CAAC,GAAGQ,QAClE,CACF,CAAC;QAEH,CAAC,CAAC,OAAOiB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrDtD,YAAY,CAAED,SAAS,IACrBA,SAAS,CAACwB,GAAG,CAAEc,QAAQ,IACrBA,QAAQ,CAAClB,EAAE,KAAKJ,MAAM,GAAG;YAAE,GAAGsB,QAAQ;YAAER,MAAM,EAAE;UAAQ,CAAC,GAAGQ,QAC9D,CACF,CAAC;QACH;MACF;IACF;;IAEA;IACAvC,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAM0D,cAAc,GAAIzC,MAAM,IAAK;IACjCf,YAAY,CAAED,SAAS,IAAKA,SAAS,CAACmB,MAAM,CAAEmB,QAAQ,IAAKA,QAAQ,CAAClB,EAAE,KAAKJ,MAAM,CAAC,CAAC;EACrF,CAAC;EAED,MAAM0C,aAAa,GAAGA,CAAA,KAAM;IAC1BzD,YAAY,CAAED,SAAS,IAAKA,SAAS,CAACmB,MAAM,CAAEmB,QAAQ,IAAKA,QAAQ,CAACR,MAAM,KAAK,WAAW,CAAC,CAAC;EAC9F,CAAC;EAED,MAAM6B,WAAW,GAAGA,CAAA,KAAM;IACxBxD,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACpC,CAAC;EAED,MAAM0D,eAAe,GAAIC,KAAK,IAAK;IACjC,IAAIC,MAAM;IACV,IAAID,KAAK,KAAK,SAAS,EAAE;MACvBC,MAAM,GAAGlE,KAAK,CAAC,CAAC;IAClB,CAAC,MAAM;MACLkE,MAAM,GAAG,CAAC,GAAGlE,KAAK,CAAC,CAACmE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACjC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,CAAC,CAACI,IAAI,CAAC;QAC9B,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC;QAC9B,OAAOP,KAAK,KAAK,KAAK,GAAGK,KAAK,GAAGG,KAAK,GAAGA,KAAK,GAAGH,KAAK;MACxD,CAAC,CAAC;IACJ;IACA7D,cAAc,CAACyD,MAAM,CAAC;IACtBrD,YAAY,CAACoD,KAAK,CAAC,CAAC,CAAC;IACrBlD,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAM2D,kBAAkB,GAAIC,KAAK,IAAK;IACpChE,aAAa,CAACgE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBnE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMoE,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,SAAS,KAAK;IAC9C,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,CAAC,EAAE;MACrB,OAAOF,IAAI;IACb;IACA,MAAMG,KAAK,GAAG,IAAIC,MAAM,CAAC,IAAIH,SAAS,GAAG,EAAE,IAAI,CAAC;IAChD,MAAMI,KAAK,GAAGL,IAAI,CAACM,KAAK,CAACH,KAAK,CAAC;IAC/B,OAAOE,KAAK,CAACzD,GAAG,CAAC,CAAC2D,IAAI,EAAEC,KAAK,KAC3BD,IAAI,CAACE,WAAW,CAAC,CAAC,KAAKR,SAAS,CAACQ,WAAW,CAAC,CAAC,gBAAG3F,OAAA;MAAkB4F,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEJ;IAAI,GAAlCC,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoC,CAAC,GAAGR,IAC3G,CAAC;EACH,CAAC;EAED,MAAMS,aAAa,GAAGxF,WAAW,CAACe,MAAM,CAACM,IAAI,IAC3CA,IAAI,CAACG,KAAK,CAACyD,WAAW,CAAC,CAAC,CAACnE,QAAQ,CAACZ,UAAU,CAAC+E,WAAW,CAAC,CAAC,CAAC,IAC3D5D,IAAI,CAACoE,KAAK,CAACR,WAAW,CAAC,CAAC,CAACnE,QAAQ,CAACZ,UAAU,CAAC+E,WAAW,CAAC,CAAC,CAC5D,CAAC;EAED,oBACE3F,OAAA;IAAK4F,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB7F,OAAA;MAAA6F,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjG,OAAA;MAAK4F,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B7F,OAAA;QACE4F,SAAS,EAAC,iBAAiB;QAC3BQ,OAAO,EAAEzE,cAAe;QACxB0E,QAAQ,EAAEjG,aAAa,CAACwB,MAAM,KAAK,CAAE;QAAAiE,QAAA,EACtC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjG,OAAA;QAAK4F,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7F,OAAA;UACEwD,IAAI,EAAC,MAAM;UACX8C,WAAW,EAAC,uGAAuB;UACnCvB,KAAK,EAAEnE,UAAW;UAClB2F,QAAQ,EAAE3B;QAAmB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,EACDrF,UAAU,iBACTZ,OAAA;UAAQ4F,SAAS,EAAC,cAAc;UAACQ,OAAO,EAAEpB,WAAY;UAAAa,QAAA,eACpD7F,OAAA,CAACF,OAAO;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNjG,OAAA;QAAK4F,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B7F,OAAA;UAAQ4F,SAAS,EAAC,aAAa;UAACQ,OAAO,EAAEA,CAAA,KAAMnF,iBAAiB,CAAC,CAACD,cAAc,CAAE;UAAA6E,QAAA,GAAC,qEACrE,eAAA7F,OAAA,CAACH,UAAU;YAAAiG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,EACRjF,cAAc,iBACbhB,OAAA;UAAI4F,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC3B7F,OAAA;YAAI4F,SAAS,EAAE9E,SAAS,KAAK,SAAS,GAAG,UAAU,GAAG,EAAG;YAACsF,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAAC,SAAS,CAAE;YAAA2B,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtHjG,OAAA;YAAI4F,SAAS,EAAE9E,SAAS,KAAK,KAAK,GAAG,UAAU,GAAG,EAAG;YAACsF,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAAC,KAAK,CAAE;YAAA2B,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChHjG,OAAA;YAAI4F,SAAS,EAAE9E,SAAS,KAAK,MAAM,GAAG,UAAU,GAAG,EAAG;YAACsF,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAAC,MAAM,CAAE;YAAA2B,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/G,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjG,OAAA;MAAA6F,QAAA,gBACE7F,OAAA;QAAA6F,QAAA,eACE7F,OAAA;UAAA6F,QAAA,gBACE7F,OAAA;YAAA6F,QAAA,eAAI7F,OAAA;cAAOwD,IAAI,EAAC,UAAU;cAAC6C,QAAQ;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3CjG,OAAA;YAAA6F,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZjG,OAAA;YAAA6F,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBjG,OAAA;YAAA6F,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBjG,OAAA;YAAA6F,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRjG,OAAA;QAAA6F,QAAA,EACGK,aAAa,CAACpE,GAAG,CAACC,IAAI,iBACrB/B,OAAA;UAAA6F,QAAA,gBACE7F,OAAA;YAAA6F,QAAA,eACE7F,OAAA;cACEwD,IAAI,EAAC,UAAU;cACfgD,OAAO,EAAEpG,aAAa,CAACoB,QAAQ,CAACO,IAAI,CAACL,EAAE,CAAE;cACzC6E,QAAQ,EAAEA,CAAA,KAAMlF,oBAAoB,CAACU,IAAI,CAACL,EAAE;YAAE;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLjG,OAAA;YAAA6F,QAAA,EAAK9D,IAAI,CAAC0E,SAAS,gBAAGzG,OAAA,CAACT,UAAU;cAAAuG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGjG,OAAA,CAACR,QAAQ;cAACkH,GAAG,EAAE3E,IAAI,CAAC2E;YAAI;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxEjG,OAAA;YAAA6F,QAAA,GACGZ,kBAAkB,CAAClD,IAAI,CAACG,KAAK,EAAEtB,UAAU,CAAC,EAC1CmB,IAAI,CAACoE,KAAK,iBAAInG,OAAA;cAAK4F,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEZ,kBAAkB,CAAClD,IAAI,CAACoE,KAAK,EAAEvF,UAAU;YAAC;cAAAkF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3F,CAAC,eACLjG,OAAA;YAAA6F,QAAA,EAAK9D,IAAI,CAAC2C,IAAI,IAAI;UAAY;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpCjG,OAAA;YAAA6F,QAAA,eAAI7F,OAAA;cAAG2G,IAAI,EAAE,IAAI5E,IAAI,CAAC6E,KAAK,EAAG;cAAC9B,MAAM,EAAC,QAAQ;cAAC+B,GAAG,EAAC,qBAAqB;cAAAhB,QAAA,EAAE,IAAI9D,IAAI,CAAC6E,KAAK;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAd7FlE,IAAI,CAACL,EAAE;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRjG,OAAA,CAACJ,WAAW;MACVU,SAAS,EAAEA,SAAU;MACrByD,cAAc,EAAEA,cAAe;MAC/BE,WAAW,EAAEA,WAAY;MACzBzD,cAAc,EAAEA,cAAe;MAC/BwD,aAAa,EAAEA;IAAc;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9F,EAAA,CAzOIF,SAAS;AAAA6G,EAAA,GAAT7G,SAAS;AA2Of,eAAeA,SAAS;AAAC,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}