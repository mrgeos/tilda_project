{"ast":null,"code":"var _jsxFileName = \"/Users/georgyshustov/tilda_frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport StatusPanel from './components/StatusPanel';\nimport PageTable from './components/PageTable';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sites, setSites] = useState([]);\n  const [pages, setPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(true);\n  const [selectedPageIds, setSelectedPageIds] = useState([]);\n  useEffect(() => {\n    fetchSites();\n  }, []);\n  const fetchSites = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/sites');\n      console.log(response.data);\n      setSites(response.data.result);\n    } catch (error) {\n      console.error('Error fetching sites:', error);\n    }\n  };\n  const fetchPages = async projectId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/sites/${projectId}/pages`);\n      console.log(response.data);\n      setPages(response.data.result);\n    } catch (error) {\n      console.error('Error fetching pages:', error);\n    }\n  };\n  const handleDownload = async (pageId, title) => {\n    const downloadItem = {\n      id: pageId,\n      title: title,\n      status: 'archiving',\n      progress: 0\n    };\n    setDownloads(prevDownloads => [...prevDownloads, downloadItem]);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/download?pageid=${pageId}`, {\n        responseType: 'blob',\n        onDownloadProgress: progressEvent => {\n          const total = progressEvent.total;\n          const current = progressEvent.loaded;\n          const percentCompleted = Math.floor(current / total * 100);\n          setDownloads(prevDownloads => prevDownloads.map(d => d.id === pageId ? {\n            ...d,\n            progress: percentCompleted\n          } : d));\n        }\n      });\n      const sizeMB = (response.data.size / (1024 * 1024)).toFixed(2);\n      setDownloads(prevDownloads => prevDownloads.map(d => d.id === pageId ? {\n        ...d,\n        status: 'downloading',\n        size: sizeMB\n      } : d));\n      const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.setAttribute('download', `${title}.zip`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setDownloads(prevDownloads => prevDownloads.map(d => d.id === pageId ? {\n        ...d,\n        status: 'completed'\n      } : d));\n      setSelectedPageIds(prevSelected => prevSelected.filter(id => id !== pageId));\n    } catch (error) {\n      setDownloads(prevDownloads => prevDownloads.map(d => d.id === pageId ? {\n        ...d,\n        status: 'error'\n      } : d));\n      console.error('Error downloading file:', error);\n    }\n  };\n  const togglePanelVisibility = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n  const handleHideCompleted = () => {\n    setDownloads(prevDownloads => prevDownloads.filter(d => d.status !== 'completed'));\n  };\n  const handlePageSelectionChange = (pageId, isSelected) => {\n    if (isSelected) {\n      setSelectedPageIds(prevSelected => [...prevSelected, pageId]);\n    } else {\n      setSelectedPageIds(prevSelected => prevSelected.filter(id => id !== pageId));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u0430\\u0439\\u0442\\u044B Tilda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), sites.length > 0 ? sites.map(site => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: site.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchPages(site.id),\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, site.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u0441\\u0430\\u0439\\u0442\\u043E\\u0432. \\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044C\\u0442\\u0435 \\u0441\\u043E\\u0435\\u0434\\u0438\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0441 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u043E\\u043C.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), pages.length > 0 && /*#__PURE__*/_jsxDEV(PageTable, {\n      pages: pages,\n      handleDownload: handleDownload,\n      selectedPageIds: selectedPageIds,\n      onSelectionChange: handlePageSelectionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatusPanel, {\n      downloads: downloads,\n      cancelDownload: () => {},\n      togglePanel: togglePanelVisibility,\n      isPanelVisible: isPanelVisible,\n      hideCompleted: handleHideCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wCoPSwXQnXYTzfhYjKtT860gwHQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","StatusPanel","PageTable","jsxDEV","_jsxDEV","App","_s","sites","setSites","pages","setPages","downloads","setDownloads","isPanelVisible","setIsPanelVisible","selectedPageIds","setSelectedPageIds","fetchSites","response","get","console","log","data","result","error","fetchPages","projectId","handleDownload","pageId","title","downloadItem","id","status","progress","prevDownloads","responseType","onDownloadProgress","progressEvent","total","current","loaded","percentCompleted","Math","floor","map","d","sizeMB","size","toFixed","downloadUrl","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","prevSelected","filter","togglePanelVisibility","handleHideCompleted","handlePageSelectionChange","isSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","site","onClick","onSelectionChange","cancelDownload","togglePanel","hideCompleted","_c","$RefreshReg$"],"sources":["/Users/georgyshustov/tilda_frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport StatusPanel from './components/StatusPanel';\nimport PageTable from './components/PageTable';\nimport './App.css';\n\nfunction App() {\n  const [sites, setSites] = useState([]);\n  const [pages, setPages] = useState([]);\n  const [downloads, setDownloads] = useState([]);\n  const [isPanelVisible, setIsPanelVisible] = useState(true);\n  const [selectedPageIds, setSelectedPageIds] = useState([]); \n\n  useEffect(() => {\n    fetchSites();\n  }, []);\n\n  const fetchSites = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/sites');\n      console.log(response.data);\n      setSites(response.data.result);\n    } catch (error) {\n      console.error('Error fetching sites:', error); \n    }\n  };\n\n  const fetchPages = async (projectId) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/sites/${projectId}/pages`);\n      console.log(response.data);\n      setPages(response.data.result);\n    } catch (error) {\n      console.error('Error fetching pages:', error); \n    }\n  };\n\n  const handleDownload = async (pageId, title) => {\n    const downloadItem = {\n      id: pageId,\n      title: title,\n      status: 'archiving',\n      progress: 0\n    };\n    setDownloads(prevDownloads => [...prevDownloads, downloadItem]);\n\n    try {\n      const response = await axios.get(`http://localhost:5000/api/download?pageid=${pageId}`, {\n        responseType: 'blob',\n        onDownloadProgress: progressEvent => {\n          const total = progressEvent.total;\n          const current = progressEvent.loaded;\n          const percentCompleted = Math.floor((current / total) * 100);\n          setDownloads(prevDownloads => prevDownloads.map(d =>\n            d.id === pageId ? { ...d, progress: percentCompleted } : d\n          ));\n        }\n      });\n\n      const sizeMB = (response.data.size / (1024 * 1024)).toFixed(2);\n      setDownloads(prevDownloads => prevDownloads.map(d =>\n        d.id === pageId ? { ...d, status: 'downloading', size: sizeMB } : d\n      ));\n\n      const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.setAttribute('download', `${title}.zip`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      \n      setDownloads(prevDownloads => prevDownloads.map(d =>\n        d.id === pageId ? { ...d, status: 'completed' } : d\n      ));\n\n      setSelectedPageIds(prevSelected => prevSelected.filter(id => id !== pageId));\n\n    } catch (error) {\n      setDownloads(prevDownloads => prevDownloads.map(d =>\n        d.id === pageId ? { ...d, status: 'error' } : d\n      ));\n      console.error('Error downloading file:', error); \n    }\n  };\n\n  const togglePanelVisibility = () => {\n    setIsPanelVisible(!isPanelVisible);\n  };\n\n  const handleHideCompleted = () => {\n    setDownloads(prevDownloads => prevDownloads.filter(d => d.status !== 'completed'));\n  };\n\n  const handlePageSelectionChange = (pageId, isSelected) => {\n    if (isSelected) {\n      setSelectedPageIds(prevSelected => [...prevSelected, pageId]);\n    } else {\n      setSelectedPageIds(prevSelected => prevSelected.filter(id => id !== pageId));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Сайты Tilda</h1>\n      {sites.length > 0 ? (\n        sites.map(site => (\n          <div key={site.id}>\n            <h2>{site.title}</h2>\n            <button onClick={() => fetchPages(site.id)}>Показать страницы</button>\n          </div>\n        ))\n      ) : (\n        <p>Нет доступных сайтов. Проверьте соединение с сервером.</p>\n      )}\n      {pages.length > 0 && (\n        <PageTable\n          pages={pages}\n          handleDownload={handleDownload}\n          selectedPageIds={selectedPageIds}\n          onSelectionChange={handlePageSelectionChange}\n        />\n      )}\n      <StatusPanel\n        downloads={downloads}\n        cancelDownload={() => {}} \n        togglePanel={togglePanelVisibility}\n        isPanelVisible={isPanelVisible}\n        hideCompleted={handleHideCompleted}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}